version: '3.8'

services:
  db:
    image: postgres:13.10
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pg_database:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    image: ximikat01/foodgram_backend:latest
    env_file: .env
    command: gunicorn foodgram.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/app/collected_static
      - media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    image: ximikat01/foodgram_frontend:latest
    volumes:
      - frontend_volume:/usr/share/nginx/html
    restart: unless-stopped

  nginx:
    image: nginx:1.19.3-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-production.conf:/etc/nginx/conf.d/default.conf:ro
      - frontend_volume:/usr/share/nginx/html
      - static_volume:/usr/share/nginx/html/static
      - media_volume:/usr/share/nginx/html/media
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

volumes:
  pg_database:
  static_volume:
  media_volume:
  frontend_volume:
