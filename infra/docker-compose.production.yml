version: '3.8'

services:
  db:
    image: postgres:13.10
    environment:
      - POSTGRES_USER=foodgram_user
      - POSTGRES_PASSWORD=foodgram_password
      - POSTGRES_DB=foodgram
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - foodgram_network

  backend:
    image: ximikat01/foodgram_backend:latest
    env_file: .env
    command: sh -c "python manage.py collectstatic --noinput && gunicorn foodgram.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/app/collected_static
      - media_volume:/app/media
    depends_on:
      - db
    networks:
      - foodgram_network

  frontend:
    image: ximikat01/foodgram_frontend:latest
    command: sh -c "cp -r /app/build/. /frontend-dist && tail -f /dev/null"
    volumes:
      - frontend_volume:/frontend-dist
    networks:
      - foodgram_network

  nginx:
    image: nginx:1.19.3-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/collected_static
      - frontend_volume:/frontend-dist
      - media_volume:/app/media
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - backend
      - frontend
    networks:
      - foodgram_network

volumes:
  pg_data:
  static_volume:
  frontend_volume:
  media_volume:

networks:
  foodgram_network:
    driver: bridge
